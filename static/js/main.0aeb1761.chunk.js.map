{"version":3,"sources":["img/undraw_proud_coder_light.svg","img/undraw_proud_coder_dark.svg","img/undraw_feeling_proud_light.svg","img/undraw_feeling_proud_dark.svg","img/undraw_conceptual_idea_light.svg","img/undraw_conceptual_idea_dark.svg","components/global-styles.js","components/themes.js","components/navigation-bar/navigation-bar.styles.jsx","components/navigation-bar/navigation-bar.component.jsx","components/home-section/home-section.styles.jsx","components/home-section/home-section.component.jsx","components/about-section/about-section.styles.jsx","components/about-section/about-section.component.jsx","components/project-section/project-section.styles.jsx","components/project-section/project-section.component.jsx","components/contact-section/contact-section.styles.jsx","components/contact-section/contact-section.component.jsx","components/dark-mode-switch/dark-mode-switch.styles.jsx","components/dark-mode-switch/dark-mode-switch.component.jsx","App.js","utils/useDarkMode.js","serviceWorker.js","index.js"],"names":["module","exports","GlobalStyles","createGlobalStyle","theme","background","lightTheme","darkTheme","NavBar","styled","nav","mode","NavLink","a","NavigationBar","href","TitleGroup","div","HomeSection","id","AboutContainer","ImageContainer","Image","img","AboutSection","src","proudCoderLight","proudCoderDark","alt","feelingProudLight","feelingProudDark","conceptualIdeaLight","conceptualIdeaDark","ButtonContainer","Button","button","PrimaryButton","SecondaryButton","OutlineButton","TextBox","Paragraph","p","ProjectSection","disabled","className","Icon","FontAwesomeIcon","ContactSection","icon","faGithub","faCodepen","faLinkedinIn","faMedium","faInstagram","faYoutube","ThemeSwitchWrapper","ToggleIcon","span","ToggleText","ThemeSwitch","label","Slider","RoundSlider","CheckBox","input","DarkModeSwitch","toggleTheme","faSun","faMoon","type","onChange","checked","App","useState","setTheme","setMode","window","localStorage","setItem","useEffect","localTheme","getItem","useDarkMode","themeToggler","themeMode","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.0aeb1761.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/undraw_proud_coder_light.efa24236.svg\";","module.exports = __webpack_public_path__ + \"static/media/undraw_proud_coder_dark.c1f9993b.svg\";","module.exports = __webpack_public_path__ + \"static/media/undraw_feeling_proud_light.6defa84a.svg\";","module.exports = __webpack_public_path__ + \"static/media/undraw_feeling_proud_dark.159ae1c5.svg\";","module.exports = __webpack_public_path__ + \"static/media/undraw_conceptual_idea_light.d418cc6c.svg\";","module.exports = __webpack_public_path__ + \"static/media/undraw_conceptual_idea_dark.9abd876c.svg\";","import { createGlobalStyle } from \"styled-components\";\nexport const GlobalStyles = createGlobalStyle`\nhtml {\n  box-sizing: border-box;\n  scroll-behavior: smooth;\n}\n\nbody {\n  margin: 0;\n  color: ${({ theme }) => theme['on-background']};\n  font-family: Comfortaa, sans-serif;\n  background-color: ${({ theme }) => theme.background};\n  background-image: url(\"data:image/svg+xml,%3Csvg width='180' height='180' viewBox='0 0 180 180' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M81.28 88H68.413l19.298 19.298L81.28 88zm2.107 0h13.226L90 107.838 83.387 88zm15.334 0h12.866l-19.298 19.298L98.72 88zm-32.927-2.207L73.586 78h32.827l.5.5 7.294 7.293L115.414 87l-24.707 24.707-.707.707L64.586 87l1.207-1.207zm2.62.207L74 80.414 79.586 86H68.414zm16 0L90 80.414 95.586 86H84.414zm16 0L106 80.414 111.586 86h-11.172zm-8-6h11.173L98 85.586 92.414 80zM82 85.586L87.586 80H76.414L82 85.586zM17.414 0L.707 16.707 0 17.414V0h17.414zM4.28 0L0 12.838V0h4.28zm10.306 0L2.288 12.298 6.388 0h8.198zM180 17.414L162.586 0H180v17.414zM165.414 0l12.298 12.298L173.612 0h-8.198zM180 12.838L175.72 0H180v12.838zM0 163h16.413l.5.5 7.294 7.293L25.414 172l-8 8H0v-17zm0 10h6.613l-2.334 7H0v-7zm14.586 7l7-7H8.72l-2.333 7h8.2zM0 165.414L5.586 171H0v-5.586zM10.414 171L16 165.414 21.586 171H10.414zm-8-6h11.172L8 170.586 2.414 165zM180 163h-16.413l-7.794 7.793-1.207 1.207 8 8H180v-17zm-14.586 17l-7-7h12.865l2.333 7h-8.2zM180 173h-6.613l2.334 7H180v-7zm-21.586-2l5.586-5.586 5.586 5.586h-11.172zM180 165.414L174.414 171H180v-5.586zm-8 5.172l5.586-5.586h-11.172l5.586 5.586zM152.933 25.653l1.414 1.414-33.94 33.942-1.416-1.416 33.943-33.94zm1.414 127.28l-1.414 1.414-33.942-33.94 1.416-1.416 33.94 33.943zm-127.28 1.414l-1.414-1.414 33.94-33.942 1.416 1.416-33.943 33.94zm-1.414-127.28l1.414-1.414 33.942 33.94-1.416 1.416-33.94-33.943zM0 85c2.21 0 4 1.79 4 4s-1.79 4-4 4v-8zm180 0c-2.21 0-4 1.79-4 4s1.79 4 4 4v-8zM94 0c0 2.21-1.79 4-4 4s-4-1.79-4-4h8zm0 180c0-2.21-1.79-4-4-4s-4 1.79-4 4h8z' fill='%2349bdc9' fill-opacity='0.3' fill-rule='evenodd'/%3E%3C/svg%3E\");\n  box-shadow: '0 5px 20px 1px rgba(0, 0, 0, 0.5)';\n}\n\nsection {\n  min-height: 100vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n}\n\nh1 {\n  font-family: Kaushan Script, sans-serif;\n  font-size: 100px;\n  margin-bottom: 0;\n}\n\nh2 {\n  color: ${({ theme }) => theme['on-background-alt']};\n  font-size: 32px;\n  font-weight: normal;\n}\n`;","export const lightTheme = {\n  'mode': 'light',\n  'primary-color': 'rgb(255, 92, 92)',\n  'primary-variant': '#ff2d2d',\n  'secondary-color': '#1b9999',\n  'on-primary': 'rgb(250, 250, 250)',\n  'on-background': 'rgb(66, 66, 66)',\n  'on-background-alt': 'rgba(66, 66, 66, 0.7)',\n  'background': 'rgb(255, 255, 255)',\n  'box-shadow': '0 5px 20px 1px rgba(0, 0, 0, 0.5)',\n}\n\nexport const darkTheme = {\n  'mode': 'dark',\n  'primary-color': 'rgb(150, 65, 255)',\n  'primary-variant': '#6c63ff',\n  'secondary-color': '#03dac5',\n  'on-primary': '#000',\n  'on-background': 'rgba(255, 255, 255, 0.9)',\n  'on-background-alt': 'rgba(255, 255, 255, 0.7)',\n  'background': '#121212',\n}","import styled from 'styled-components';\n\nexport const NavBar = styled.nav`\n  z-index: 10;\n  position: fixed;\n  font-family: Oswald, sans-serif;\n  font-size: 24px;\n  letter-spacing: 3px;\n  padding: 25px;\n  width: 100vw;\n  background: ${({ theme }) => (theme.mode === 'light' ) ? 'rgb(255 255 255 / 50%)' : 'rgb(0 0 0 / 50%)'};\n`;\n\nexport const NavLink = styled.a`\n  margin-right: 33.5px;\n  color: ${({ theme }) => theme['primary-color']};\n  text-decoration: none;\n  border-bottom: 3px solid transparent;\n  font-weight: bold;\n  user-select: none; \n\n  &:hover,\n  &.active {\n    color: ${({ theme }) => theme['on-background']};\n    border-bottom: 3px solid;    \n  }\n\n`;","import React from 'react';\nimport { NavBar, NavLink } from './navigation-bar.styles';\n\nconst NavigationBar = () => {\n  return(\n    <NavBar>\n      <NavLink href=\"#home\">HOME</NavLink>\n      <NavLink href=\"#about\">ABOUT</NavLink>\n      <NavLink href=\"#projects\">PROJECTS</NavLink>\n      <NavLink href=\"#contact\">CONTACT</NavLink>\n    </NavBar>\n  );\n};\n\nexport default NavigationBar;","import styled from 'styled-components';\n\nexport const TitleGroup = styled.div`\n  text-align: center;\n`;","import React from 'react';\nimport { TitleGroup } from './home-section.styles';\n\nconst HomeSection = () => {\n  return(\n    <section id=\"home\">\n      <TitleGroup>\n        <h1>Custom Title Here</h1>\n        <h2>Welcome to the Website!</h2>\n      </TitleGroup>\n    </section>\n  );\n}\n\nexport default HomeSection;","import styled from 'styled-components';\n\nexport const AboutContainer = styled.div`\n  display: flex;\n`;\n\nexport const ImageContainer = styled.div`\n  border: 1px solid ${({ theme }) => theme['secondary-color']};\n  border-radius: 10px;\n  padding: 10px 20px;\n  margin-right: 25px;\n  width: auto;\n  background: ${({ theme }) => theme['background']};\n  box-shadow: ${({ theme }) => theme['box-shadow']};\n`;\n\nexport const Image = styled.img`\n  height: 300px;\n  width: 300px;\n`","import React from 'react';\nimport proudCoderLight from '../../img/undraw_proud_coder_light.svg';\nimport proudCoderDark from '../../img/undraw_proud_coder_dark.svg';\nimport feelingProudLight from '../../img/undraw_feeling_proud_light.svg';\nimport feelingProudDark from '../../img/undraw_feeling_proud_dark.svg';\nimport conceptualIdeaLight from '../../img/undraw_conceptual_idea_light.svg';\nimport conceptualIdeaDark from '../../img/undraw_conceptual_idea_dark.svg';\nimport {\n  AboutContainer,\n  ImageContainer,\n  Image\n} from './about-section.styles';\n\nconst AboutSection = ({ theme }) => {\n  return(\n    <section id=\"about\">\n      <h1>Undraw Illustrations</h1>\n      <AboutContainer>\n        <ImageContainer>\n          <h2>Web Innovation</h2>\n          <Image src={\n            theme === 'light' ? proudCoderLight : proudCoderDark\n          } alt=\"Proud Coder\" />\n        </ImageContainer>\n        <ImageContainer>\n          <h2>Problem Solving</h2>\n          <Image src={\n            theme === 'light' ? feelingProudLight : feelingProudDark\n          } alt=\"Feeling Proud\" />\n        </ImageContainer>\n        <ImageContainer>\n          <h2>High Concept</h2>\n          <Image src={\n            theme === 'light' ? conceptualIdeaLight : conceptualIdeaDark\n          } alt=\"Idea\" />\n        </ImageContainer>\n      </AboutContainer>\n    </section>\n  )\n}\n\nexport default AboutSection;","import styled from 'styled-components';\n\nexport const ButtonContainer = styled.div`\n  margin-top: 15px;\n  margin-bottom: 50px;\n`;\n\nexport const Button = styled.button`\n  min-width: 100px;\n  height: 40px;\n  cursor: pointer;\n  border-radius: 10px;\n  margin-right: 10px;\n  border: 2px solid ${({ theme }) => theme['primary-color']};\n  font-size: 15px;\n  outline: none;\n\n  &:disabled {\n    opacity: 0.4;\n    cursor: default;\n  }\n`;\n\nexport const PrimaryButton = styled(Button)`\n  background: ${({ theme }) => theme['primary-color']};\n  color: ${({ theme }) => theme['on-primary']};\n\n  &:hover {\n    filter: brightness(110%);\n  }\n`\n\nexport const SecondaryButton = styled(Button)`\n  border: 2px solid ${({ theme }) => theme['secondary-color']};\n  background: ${({ theme }) => theme['secondary-color']};\n  color: ${({ theme }) => theme['on-primary']};\n\n  &:hover {\n    filter: brightness(110%);\n    background: ${({ theme }) => theme['secondary-color']};\n    color: ${({ theme }) => theme['on-primary']};\n  }\n`;\n\nexport const OutlineButton = styled(Button)`\n  background: ${({ theme }) => theme['background']};\n  color: ${({ theme }) => theme['on-background']};\n\n  &:hover {\n    background: ${({ theme }) => theme['primary-color']};\n    color: ${({ theme }) => theme['on-primary']};\n  }\n\n  &.secondary {\n    border: 2px solid ${({ theme }) => theme['secondary-color']};\n  }\n\n  &.secondary:hover {\n    background: ${({ theme }) => theme['secondary-color']};\n    color: ${({ theme }) => theme['on-primary']};\n  }\n`;\n\nexport const TextBox = styled.div`\n  width: 40%;\n  text-align: justify;\n  background: ${({ theme }) => (theme.mode === 'light' ) ? 'rgb(0 0 0 / 50%)' : 'rgb(255 255 255 / 50%)'};\n  color: ${({ theme }) => theme['on-primary']};\n  border-radius: 10px;\n  padding: 30px;\n`;\n\nexport const Paragraph = styled.p`\n  margin: 0;\n  line-height: 25px;\n`;","import React from 'react';\nimport {\n  ButtonContainer,\n  PrimaryButton,\n  SecondaryButton,\n  OutlineButton,\n  TextBox,\n  Paragraph\n} from './project-section.styles';\n\nconst ProjectSection = () => {\n  return(\n    <section id=\"projects\">\n      <h1>Buttons</h1>\n      <ButtonContainer>\n        <PrimaryButton>Primary</PrimaryButton>\n        <SecondaryButton>Secondary</SecondaryButton>\n        <PrimaryButton disabled>Disabled</PrimaryButton>\n        <OutlineButton>Outline</OutlineButton>\n        <OutlineButton className=\"secondary\">Alt Outline</OutlineButton>\n        <OutlineButton disabled>Disabled</OutlineButton>\n      </ButtonContainer>\n      <TextBox id=\"text-box\">\n        <Paragraph>Lorem ipsum, dolor sit amet consectetur adipisicing elit. Alias unde rem possimus architecto numquam sed hic eius soluta quo labore, nesciunt deserunt autem modi blanditiis molestias nisi enim ipsam quod?</Paragraph>\n      </TextBox>\n    </section>\n  );\n}\n\nexport default ProjectSection;","import styled from 'styled-components';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nexport const Icon = styled(FontAwesomeIcon)`\n  font-size: 100px;\n  margin-right: 50px;\n  cursor: pointer;\n  color: ${({ theme }) => theme['primary-color']};\n`;","import React from 'react';\nimport {\n  faGithub,\n  faCodepen,\n  faLinkedinIn,\n  faMedium,\n  faInstagram,\n  faYoutube\n} from '@fortawesome/free-brands-svg-icons';\nimport { Icon } from './contact-section.styles';\n\nconst ContactSection = () => {\n  return(\n    <section id=\"contact\">\n      <div>\n        <Icon icon={faGithub}></Icon>\n        <Icon icon={faCodepen}></Icon>\n        <Icon icon={faLinkedinIn}></Icon>\n        <Icon icon={faMedium}></Icon>\n        <Icon icon={faInstagram}></Icon>\n        <Icon icon={faYoutube}></Icon>\n      </div>\n    </section>\n  );\n}\n\nexport default ContactSection;","import styled from 'styled-components';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nexport const ThemeSwitchWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  z-index: 100;\n  position: fixed;\n  right: 25px;\n  top: 30px;\n`;\n\nexport const ToggleIcon = styled.span`\n  margin-right: 10px;\n  font-size: 1rem;\n`;\n\nexport const ToggleText = styled.span`\n  position: relative;\n  top: -4px;\n  right: 20px;\n  color: ${({ theme }) => theme['on-background']};\n  user-select: none; \n`;\n\nexport const ThemeSwitch = styled.label`\n  display: inline-block;\n  height: 34px;\n  position: relative;\n  width: 60px;\n`;\n\nexport const Slider = styled.div`\n  background: #ccc;\n  bottom: 0;\n  cursor: pointer;\n  left: 0;\n  position: absolute;\n  right: 0;\n  top: 0;\n  transition: 0.4s;\n\n  &:before {\n    background: #fff;\n    bottom: 4px;\n    content: \"\";\n    height: 26px;\n    left: 4px;\n    position: absolute;\n    transition: 0.4s;\n    width: 26px;\n  }\n`;\n\nexport const RoundSlider = styled(Slider)`\n  border-radius: 34px;\n\n  &:before {\n    border-radius: 50%;\n  }\n`\nexport const CheckBox = styled.input`\n  display: none;\n\n  &:checked + ${Slider} {\n    background: ${({ theme }) => theme['primary-color']};\n  }\n\n  &:checked + ${Slider}:before {\n    transform: translateX(26px);\n  }\n`;\n\n// https://spectrum.chat/styled-components/general/dynamically-change-size-for-fontawesome-icons-using-styled-components-and-nextjs~5b68c8de-6f40-4e84-9109-3654e865721d\nexport const Icon = styled(FontAwesomeIcon)`\n  font-size: 30px;\n  margin-right: 5px;\n`","import React from 'react';\nimport { faSun, faMoon } from '@fortawesome/free-solid-svg-icons';\nimport {\n  ThemeSwitchWrapper,\n  ToggleIcon,\n  ToggleText,\n  ThemeSwitch,\n  CheckBox,\n  RoundSlider,\n  Icon  \n} from './dark-mode-switch.styles';\n\nconst DarkModeSwitch = ({ theme, toggleTheme }) => {\n  return (\n    <ThemeSwitchWrapper>\n      <ToggleIcon>\n        <ToggleText>\n        {\n          theme === 'light' ? 'Light Mode' : 'Dark Mode'\n        }\n        </ToggleText>        \n        <Icon icon={\n          theme === 'light' ? faSun : faMoon\n        }\n        />\n      </ToggleIcon>\n      <ThemeSwitch>\n        <CheckBox type=\"checkbox\" onChange={toggleTheme}\n          checked={\n            theme === 'light' ? false : true\n          }\n        />\n        <RoundSlider/>\n      </ThemeSwitch>\n    </ThemeSwitchWrapper>\n  );\n};\n\nexport default DarkModeSwitch;","import React from 'react';\nimport { ThemeProvider } from 'styled-components';\nimport { useDarkMode } from './utils/useDarkMode';\nimport { GlobalStyles } from './components/global-styles';\nimport { lightTheme, darkTheme } from './components/themes';\nimport NavigationBar from './components/navigation-bar/navigation-bar.component';\nimport HomeSection from './components/home-section/home-section.component';\nimport AboutSection from './components/about-section/about-section.component';\nimport ProjectSection from './components/project-section/project-section.component';\nimport ContactSection from './components/contact-section/contact-section.component';\nimport DarkModeSwitch from './components/dark-mode-switch/dark-mode-switch.component';\n// import './App.css';\n\nconst App = () => {\n  const [theme, themeToggler] = useDarkMode();\n  const themeMode = theme === 'light' ? lightTheme : darkTheme;\n  return (\n    <ThemeProvider theme={themeMode}>\n      <GlobalStyles/>\n      <DarkModeSwitch theme={theme} toggleTheme={themeToggler} />\n      <NavigationBar />      \n      <HomeSection />\n      <AboutSection theme={theme}/>\n      <ProjectSection />\n      <ContactSection />\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","import { useEffect, useState } from 'react';\nexport const useDarkMode = () => {\n  const [theme, setTheme] = useState('light');\n\n  const setMode = mode => {\n    window.localStorage.setItem('theme', mode);\n    setTheme(mode);\n  };\n\n  const themeToggler = () => {\n    theme === 'light' ? setMode('dark') : setMode('light')\n  };\n\n  useEffect(() => {\n    const localTheme = window.localStorage.getItem('theme');\n    localTheme ? setTheme(localTheme) : setMode('light');\n  }, []);\n\n  return [theme, themeToggler]\n};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}